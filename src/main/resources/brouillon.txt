=====================================================
PERSON
=====================================================

+++++ CREATE +++++

{
    "firstName": "Phileas",
    "lastName": "Fogg",
    "address": "11 Downing Street",
    "city": "London",
    "zip": "88888",
    "phone": "111-222-3333",
    "email": "p.fogg@gegemail.com"
}


+++++ UPDATE +++++

{
    "firstName": "Phileas",
    "lastName": "Fogg",
    "address": "99 Abbey Road",
    "city": "London",
    "zip": "88888",
    "phone": "999-888-7777",
    "email": "phileas.f@jojomail.com"
}


+++++ DELETE +++++

{
    "firstName": "Phileas",
    "lastName": "Fogg"
}

=====================================================
MEDICALRECORD
=====================================================
+++++ CREATE +++++

{
    "firstName":"Phileas",
    "lastName":"Fogg",
    "birthdate":"11/11/1811",
    "medications":["chloroquine:500mg"],
    "allergies":["arachide"]
}

+++++ UPDATE +++++

{
    "firstName":"Phileas",
    "lastName":"Fogg",
    "birthdate":"12/22/1812",
    "medications":["azithromycine=350mg"],
    "allergies":["lactose"]
}


+++++ DELETE +++++

{
    "firstName": "Phileas",
    "lastName": "Fogg"
}




{ "address":"888 street", "station":"34" }


=====================================================
MEDICALRECORD
=====================================================
+++++ CREATE +++++

{
    "station": 5,
    "address": "Abbey road"
}


{
    "station": 6,
    "address": "Downing Street"
}

+++++ UPDATE +++++

{
    "station": 5,
    "address": "Downing Street"
}

person.hashcode

-804949471
1352492312
-1905250186
1769019289
-2025153406
26395867
-239365359
73827437
217935190
2105073652
303686837
239424405
150406247
80278393
-2021929814
-2081692839
415880220
2097504816
-1839620287
1874202606
366108456
904253816
66454761



Person{firstName=Shawna, lastName=Stelzer, address=947 E. Rose Dr, city=Culver, zip=97451, phone=841-874-7784, email=ssanw@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect},
Person{firstName=Zach, lastName=Zemicks, address=892 Downing Ct, city=Culver, zip=97451, phone=841-874-7512, email=zarc@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect},
Person{firstName=Ron, lastName=Peters, address=112 Steppes Pl, city=Culver, zip=97451, phone=841-874-8888, email=jpeter@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect},
Person{firstName=Brian, lastName=Stelzer, address=947 E. Rose Dr, city=Culver, zip=97451, phone=841-874-7784, email=bstel@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect},
 Person{firstName=Clive, lastName=Ferguson, address=748 Townings Dr, city=Culver, zip=97451, phone=841-874-6741, email=clivfd@ymail.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Kendrik, lastName=Stelzer, address=947 E. Rose Dr, city=Culver, zip=97451, phone=841-874-7784, email=bstel@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Warren, lastName=Zemicks, address=892 Downing Ct, city=Culver, zip=97451, phone=841-874-7512, email=ward@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=John, lastName=Boyd, address=1509 Culver St, city=Culver, zip=97451, phone=841-874-6512, email=jaboyd@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Tessa, lastName=Carman, address=834 Binoc Ave, city=Culver, zip=97451, phone=841-874-6512, email=tenz@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Tony, lastName=Cooper, address=112 Steppes Pl, city=Culver, zip=97451, phone=841-874-6874, email=tcoop@ymail.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Jamie, lastName=Peters, address=908 73rd St, city=Culver, zip=97451, phone=841-874-7462, email=jpeter@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Tenley, lastName=Boyd, address=1509 Culver St, city=Culver, zip=97451, phone=841-874-6512, email=tenz@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Peter, lastName=Duncan, address=644 Gershwin Cir, city=Culver, zip=97451, phone=841-874-6512, email=jaboyd@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Felicia, lastName=Boyd, address=1509 Culver St, city=Culver, zip=97451, phone=841-874-6544, email=jaboyd@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Eric, lastName=Cadigan, address=951 LoneTree Rd, city=Culver, zip=97451, phone=841-874-7458, email=gramps@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Jacob, lastName=Boyd, address=1509 Culver St, city=Culver, zip=97451, phone=841-874-6513, email=drk@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Foster, lastName=Shepard, address=748 Townings Dr, city=Culver, zip=97451, phone=841-874-6544, email=jaboyd@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Lily, lastName=Cooper, address=489 Manchester St, city=Culver, zip=97451, phone=841-874-9845, email=lily@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Roger, lastName=Boyd, address=1509 Culver St, city=Culver, zip=97451, phone=841-874-6512, email=jaboyd@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Allison, lastName=Boyd, address=112 Steppes Pl, city=Culver, zip=97451, phone=841-874-9888, email=aly@imail.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Reginold, lastName=Walker, address=908 73rd St, city=Culver, zip=97451, phone=841-874-8547, email=reg@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Sophia, lastName=Zemicks, address=892 Downing Ct, city=Culver, zip=97451, phone=841-874-7878, email=soph@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}, Person{firstName=Jonanathan, lastName=Marrack, address=29 15th St, city=Culver, zip=97451, phone=841-874-6513, email=drk@email.com, birthdate=getBirthdate(), allergies=getAllergies().stream().collect, medications=getMedications().stream().collect}]


{Firestation[station=1, address=644 Gershwin Cir]={644 Gershwin Cir=
    [Person{firstName=Peter, lastName=Duncan, address=644 Gershwin Cir, city=Culver, zip=97451, phone=841-874-6512, email=jaboyd@email.com, birthdate=2000-09-06, allergies={shellfish}, medications={}}]},

 Firestation[station=1, address=908 73rd St]={908 73rd St=[
    Person{firstName=Jamie, lastName=Peters, address=908 73rd St, city=Culver, zip=97451, phone=841-874-7462, email=jpeter@email.com, birthdate=1982-03-06, allergies={}, medications={}},
     Person{firstName=Reginold, lastName=Walker, address=908 73rd St, city=Culver, zip=97451, phone=841-874-8547, email=reg@email.com, birthdate=1979-08-30, allergies={illisoxian}, medications={thradox:700mg}}]},

 Firestation[station=1, address=947 E. Rose Dr]={947 E. Rose Dr=[
     Person{firstName=Shawna, lastName=Stelzer, address=947 E. Rose Dr, city=Culver, zip=97451, phone=841-874-7784, email=ssanw@email.com, birthdate=1980-07-08, allergies={}, medications={}},
     Person{firstName=Brian, lastName=Stelzer, address=947 E. Rose Dr, city=Culver, zip=97451, phone=841-874-7784, email=bstel@email.com, birthdate=1975-12-06, allergies={nillacilan}, medications={ibupurin:200mg, hydrapermazol:400mg}},
     Person{firstName=Kendrik, lastName=Stelzer, address=947 E. Rose Dr, city=Culver, zip=97451, phone=841-874-7784, email=bstel@email.com, birthdate=2014-03-06, allergies={}, medications={noxidian:100mg, pharmacol:2500mg}}]},


 Firestation[station=4, address=112 Steppes Pl]={112 Steppes Pl=[
    Person{firstName=Ron, lastName=Peters, address=112 Steppes Pl, city=Culver, zip=97451, phone=841-874-8888, email=jpeter@email.com, birthdate=1965-04-06, allergies={}, medications={}},
    Person{firstName=Tony, lastName=Cooper, address=112 Steppes Pl, city=Culver, zip=97451, phone=841-874-6874, email=tcoop@ymail.com, birthdate=1994-03-06, allergies={shellfish}, medications={hydrapermazol:300mg, dodoxadin:30mg}},
    Person{firstName=Allison, lastName=Boyd, address=112 Steppes Pl, city=Culver, zip=97451, phone=841-874-9888, email=aly@imail.com, birthdate=1965-03-15, allergies={nillacilan}, medications={aznol:200mg}}]},

Firestation[station=4, address=489 Manchester St]={489 Manchester St=[
    Person{firstName=Lily, lastName=Cooper, address=489 Manchester St, city=Culver, zip=97451, phone=841-874-9845, email=lily@email.com, birthdate=1994-03-06, allergies={}, medications={}}]}}


Exception encountered during context initialization - cancelling refresh attempt:

org.springframework.beans.factory.UnsatisfiedDependencyException:

Error creating bean with name 'firestationController' defined in file

[E:\OpenClassRooms\Projet 5 - 120 heures\Projet\final - 11\SafetyNet\target\classes\com\openclassrooms\safetynet\controller\FirestationController.class]:

Unsatisfied dependency expressed through constructor parameter 0;

nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException:

Error creating bean with name 'firestationService' defined in file

[E:\OpenClassRooms\Projet 5 - 120 heures\Projet\final - 11\SafetyNet\target\classes\com\openclassrooms\safetynet\service\FirestationService.class]:

Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException:

Error creating bean with name 'firestationRepo' defined in file
[E:\OpenClassRooms\Projet 5 - 120 heures\Projet\final - 11\SafetyNet\target\classes\com\openclassrooms\safetynet\repository\FirestationRepo.class]:
Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException:
Error creating bean with name 'loadFromJson' defined in class path resource [com/openclassrooms/safetynet/dao/JsonDAO.class]:
Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException:
Failed to instantiate [com.openclassrooms.safetynet.dao.EntitiesCollections]: Factory method 'loadFromJson' threw exception;
nested exception is com.fasterxml.jackson.databind.JsonMappingException: Cannot invoke "java.util.Map.values()" because "this.persons" is null
 at [Source: (File); line: 140, column: 5] (through reference chain: com.openclassrooms.safetynet.dao.EntitiesCollections["medicalrecords"])
 ------------------------------------------------------------------------------------------------------------------


 //
 // Source code recreated from a .class file by IntelliJ IDEA
 // (powered by FernFlower decompiler)
 //

 package com.openclassrooms.safetynet.dao;

 import com.openclassrooms.safetynet.entity.Firestation;
 import com.openclassrooms.safetynet.entity.Medicalrecord;
 import com.openclassrooms.safetynet.entity.Person;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 import org.junit.jupiter.api.BeforeAll;
 import org.junit.jupiter.api.Test;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.test.context.TestPropertySource;

 @SpringBootTest
 @TestPropertySource(
     locations = {".../src/test/resources/application.properties"}
 )
 class JsonDAOTest {
     @Autowired
     JsonDAO jsonDAO = new JsonDAO();
     @Autowired
     EntitiesCollections collections;
     static List<Person> personsListTest;
     static List<Medicalrecord> medicalrecordListTest;
     static List<Firestation> firestationListTest;

     JsonDAOTest() {
     }

     @BeforeAll
     private static void setUp() {
         Person p1 = new Person("f1", "l2");
         p1.setCity("c1");
         p1.setPhone("p1");
         p1.setEmail("e1");
         p1.setZip(1);
         p1.setAddress("a1");
         Person p2 = new Person("f2", "l2");
         p1.setCity("c2");
         p1.setPhone("p2");
         p1.setEmail("e2");
         p1.setZip(2);
         p1.setAddress("a2");
         Medicalrecord mr1 = new Medicalrecord(p1);
         mr1.setAllergies(Arrays.asList("a11", "a12"));
         mr1.setMedications(Arrays.asList("m11", "m12"));
         p1.setMedicalrecord(mr1);
         Medicalrecord mr2 = new Medicalrecord(p2);
         mr2.setAllergies(Arrays.asList("a21", "a22"));
         mr2.setMedications(Arrays.asList("m21", "m22"));
         p2.setMedicalrecord(mr2);
         Firestation f11 = new Firestation(1, "a11");
         Firestation f12 = new Firestation(1, "a12");
         Firestation f21 = new Firestation(2, "a21");
         Firestation f22 = new Firestation(2, "a22");
         personsListTest = new ArrayList();
         medicalrecordListTest = new ArrayList();
         firestationListTest = new ArrayList();
         personsListTest.add(p1);
         personsListTest.add(p2);
         medicalrecordListTest.add(mr1);
         medicalrecordListTest.add(mr2);
         firestationListTest.add(f21);
         firestationListTest.add(f22);
         firestationListTest.add(f11);
         firestationListTest.add(f12);
     }

     @Test
     void testLoadFromJson() throws IOException {
     }

     @Test
     void testsSaveToJson() {
     }
 }

=========================================================================================
  "medicalrecords":
   [
     { "firstName":"f1", "lastName":"l1", "birthdate":"01/01/0001", "medications":["m11", "m12"], "allergies":["a11"] },
     { "firstName":"f2", "lastName":"l2", "birthdate":"02/02/0002", "medications":["m21", "m22"], "allergies":["a22"] }
   ]
========================================================================================

{
  "medicalrecords":
  [
    { "firstName" : "f1",
      "lastName" : "l1",
      "allergies" : [ ],
      "medications" : [ ],
      "birthdate" : "07/08/1980" },

    { "firstName" : "f2",
      "lastName" : "l2",
      "allergies" : [ ],
      "medications" : [ ],
      "birthdate" : "07/08/1980" }
  ],

  "firestations":
  [
    { "address":"a11", "station":1 },
    { "address":"a12", "station":1 },
    { "address":"a21", "station":2 },
    { "address":"a22", "station":2 }
  ],

  "persons":
  [
    { "firstName":"f1", "lastName":"l1", "address":"a1", "city":"c1", "zip":1, "phone":"p1", "email":"e1" },
    { "firstName":"f2", "lastName":"l2", "address":"a2", "city":"c2", "zip":2, "phone":"p2", "email":"e2" }
  ]
}


